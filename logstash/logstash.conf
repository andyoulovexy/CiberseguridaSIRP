# input{
#   beats {
#     port => 5044
#   }
# }
input {
  redis {
    host => "redis"  # variable pasada por el enviroment docker-compose
    port => "6379"
    #password => "Admin@123456" # no utiliza por misp
    data_type => "list"
    # db => 0
         batch_count => 1 ### Este valor se refiere a cuántas piezas se extraen al mismo tiempo al leer datos de la cola. Si no escribe, se informará un error. La solución es no usar esta función y establecer batch_size en 1.
    # #type => "log"
    key => "filebeat"
  }

  redis {
    host => "redis"  # variable pasada por el enviroment docker-compose
    port => "6379"
    #password => "Admin@123456" # no utiliza por misp
    data_type => "list"
    # db => 0
         batch_count => 1 ### Este valor se refiere a cuántas piezas se extraen al mismo tiempo al leer datos de la cola. Si no escribe, se informará un error. La solución es no usar esta función y establecer batch_size en 1.
    # #type => "log"
    key => "filebeat23"
  }
  
  redis {
    host => "redis"
    port => "6379"
    data_type => "list"
    key => "suricata"
    codec => "json"
    threads => 12
    type => "SuricataIDPS"
  }



}

filter{
  grok{
    match => {"message" => [
     "%{WORD:nivel} %{TIMESTAMP_ISO8601:date} \[%{WORD:tipo}] %{WORD:hilo} - %{WORD:tipoerror} \|%{NUMBER:codigo}\| %{USERNAME:usuario} %{IP:ip}"
    ]}
  }

  if [type] == "SuricataIDPS" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }

  
}

output {  
  elasticsearch {
     #hosts => "http://192.168.70.2:9200"
     # utilizar espacio luego de cada ip 
     #hosts => ["http://192.168.70.2:9200", "http://192.168.70.10:9200", "http://192.168.70.11:9200"]
     hosts => ["http://elasticsearch1:9200", "http://elasticsearch2:9200", "http://elasticsearch3:9200"]
     index => "ejemp-%{+yyyy-MM-dd}"
  }
}